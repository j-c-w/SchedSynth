alpha = { 'a'..'z' | 'A'..'Z' | "." | "_" }
digit = { '0'..'9' }
colon = { ":" }

number = { digit+ }
range = { whitespace_plus ~ "in" ~ whitespace_star ~ "[" ~ number ~ whitespace_star ~ "," ~ whitespace_star ~ number ~ whitespace_star ~ "]" }

ident = { (alpha | digit) + }
newline = { whitespace* ~ "\n"}

indent = { "  " }

indent_nest = { indent* }

optional_range = { ( range)? }

produce = { "produce" ~ whitespace_plus ~ ident ~ colon }
consume = { "consume" ~ whitespace_plus ~ ident ~ colon }
pfor = {"for" ~ whitespace_plus ~ ident ~ optional_range ~ colon }
vectorize = { "vectorized" ~ whitespace_plus ~ ident ~ optional_range ~ colon }
parallel = { "parallel" ~ whitespace_plus ~ ident ~ optional_range ~ colon }
assignment = {ident ~ "(...) = ..."}
store_at = { "store" ~ whitespace_plus ~ ident }
unroll = { "unroll" ~ whitespace_plus ~ ident ~ whitespace_plus ~ number ~ whitespace_plus ~ colon}

whitespace = { " " | "\t" }
whitespace_plus = { whitespace+ }
whitespace_star = { whitespace* }
whitespace_or_newline = { whitespace | newline }
whitespace_or_newlines = { whitespace_or_newline* }


sequence_list = {
  sequence ~ newline ~ sequence_list
  | sequence ~ whitespace_or_newlines ~ EOI
}
sequence =
  { indent_nest ~ produce
  | indent_nest ~ consume
  | indent_nest ~ pfor
  | indent_nest ~ store_at
  | indent_nest ~ assignment
  | indent_nest ~ vectorize
  | indent_nest ~ unroll
  | indent_nest ~ parallel }
